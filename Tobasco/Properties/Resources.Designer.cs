//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tobasco.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tobasco.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AnymonousPropertySet.
        /// </summary>
        internal static string AnymonousPropertySet {
            get {
                return ResourceManager.GetString("AnymonousPropertySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public override ExpandoObject ToAnonymous()
        ///{
        ///	dynamic anymonous = base.ToAnonymous();
        ///	%AnymonousPropertySet%
        ///	return anymonous;
        ///}.
        /// </summary>
        internal static string ClassDapperMethod {
            get {
                return ResourceManager.GetString("ClassDapperMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %Namespaces%
        ///
        ///namespace %OwnNamespace%
        ///{
        ///	%Attributes%
        ///	public %Abstract% partial %Type% %ClassName%%Extension% %BaseClass%
        ///	{
        ///		%Constructor%		
        ///		%Properties%		
        ///		%Methods%	
        ///	}
        ///}.
        /// </summary>
        internal static string ClassFile {
            get {
                return ResourceManager.GetString("ClassFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public SqlConnection GetConnection()
        ///        {
        ///            lock (_lock)
        ///            {
        ///                if (_connection.State == ConnectionState.Closed || _connection.State == ConnectionState.Broken)
        ///                {
        ///                    _connection.Open();
        ///                }
        ///            }
        ///
        ///            return _connection;
        ///        }.
        /// </summary>
        internal static string ConnectionFactoryGetConnection {
            get {
                return ResourceManager.GetString("ConnectionFactoryGetConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %ConstructorFields%
        ///public %Name%(%ConstructorParameters%)
        ///{
        ///	%FieldWithParameter%
        ///	%CustomImplementation%
        ///}.
        /// </summary>
        internal static string Constructor {
            get {
                return ResourceManager.GetString("Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [System.Diagnostics.CodeAnalysis.SuppressMessage(&quot;Microsoft.Maintainability&quot;, &quot;CA1506: AvoidExcessiveClassCoupling&quot;, Justification = &quot;Generated file&quot;)]
        ///public override void Load()
        ///{
        ///    %DIParams%
        ///}.
        /// </summary>
        internal static string DependencyInjection {
            get {
                return ResourceManager.GetString("DependencyInjection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public IEnumerable&lt;T&gt; Save(IEnumerable&lt;T&gt; entities)
        ///{
        ///	var enumerable = entities as IList&lt;T&gt; ?? entities.ToList();
        ///	foreach (var entity in enumerable)
        ///	{
        ///		Save(entity);
        ///	}
        ///	return enumerable;
        ///}.
        /// </summary>
        internal static string GenericRepositoryBulkSave {
            get {
                return ResourceManager.GetString("GenericRepositoryBulkSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public void Delete(T entity)
        ///{
        ///	using (var connection = ConnectionFactory.GetConnection())
        ///	{
        ///		connection.Execute($&quot;[dbo].[{ typeof(T).Name}_Delete]&quot;,
        ///			new {entity.Id, entity.RowVersion, entity.ModifiedBy },
        ///			commandType: CommandType.StoredProcedure);
        ///	}
        ///}.
        /// </summary>
        internal static string GenericRepositoryDelete {
            get {
                return ResourceManager.GetString("GenericRepositoryDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public T GetById(long id)
        ///{
        ///	T entity;
        ///	using (var connection = ConnectionFactory.GetConnection())
        ///	{
        ///		entity = connection.QuerySingle&lt;T&gt;($&quot;[dbo].[{ typeof(T).Name}_GetById]&quot;,
        ///			new {Id = id},
        ///			commandType: CommandType.StoredProcedure);
        ///	}
        ///	entity.MarkOld();
        ///	return entity;
        ///}.
        /// </summary>
        internal static string GenericRepositoryGetById {
            get {
                return ResourceManager.GetString("GenericRepositoryGetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public T Insert(T entity)
        ///{
        ///	using (var connection = ConnectionFactory.GetConnection())
        ///	{
        ///		connection.Query&lt;long, byte[], T&gt;($&quot;[dbo].[{typeof(T).Name}_Insert]&quot;, (id, rowversion) =&gt;
        ///		{
        ///			entity.Id = id;
        ///			entity.RowVersion = rowversion;
        ///			return entity;
        ///		}, ToAnonymous(entity, false), splitOn: &quot;RowVersion&quot;, commandType: CommandType.StoredProcedure);
        ///	}
        ///	entity.MarkOld();
        ///	return entity;
        ///}.
        /// </summary>
        internal static string GenericRepositoryInsert {
            get {
                return ResourceManager.GetString("GenericRepositoryInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public IEnumerable&lt;T&gt; QueryMultiple(string StoredProcedure, DynamicParameters parameters, Func&lt;GridReader, IEnumerable&lt;T&gt;&gt; readerFunc)
        ///        {
        ///            using (var connection = ConnectionFactory.GetConnection())
        ///            {
        ///                return readerFunc(connection.QueryMultiple(StoredProcedure, parameters, commandType: CommandType.StoredProcedure));
        ///            }
        ///        }.
        /// </summary>
        internal static string GenericRepositoryQueryMultipleT {
            get {
                return ResourceManager.GetString("GenericRepositoryQueryMultipleT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public T Save(T entity)
        ///{
        ///	if(entity.IsDeleted)
        ///	{
        ///		Delete(entity);
        ///		return entity;
        ///	}
        ///	if(entity.IsNew)
        ///	{
        ///		return Insert(entity);
        ///	}
        ///	if(entity.IsDirty)
        ///	{
        ///		return Update(entity);
        ///	}
        ///	return entity;
        ///}.
        /// </summary>
        internal static string GenericRepositorySave {
            get {
                return ResourceManager.GetString("GenericRepositorySave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private DynamicParameters ToAnonymous(T entity, bool includeRowVersion)
        ///{
        ///	dynamic anonymousEntity = entity.ToAnonymous();
        ///	anonymousEntity.Id = entity.Id;
        ///	var parameters = new DynamicParameters(anonymousEntity);
        ///	if (includeRowVersion)
        ///	{
        ///		parameters.Add(&quot;RowVersion&quot;, entity.RowVersion, DbType.Binary);
        ///	}
        ///	return parameters;
        ///}.
        /// </summary>
        internal static string GenericRepositoryToAnonymous {
            get {
                return ResourceManager.GetString("GenericRepositoryToAnonymous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public T Update(T entity)
        ///{
        ///	using (var connection = ConnectionFactory.GetConnection())
        ///	{
        ///		try
        ///		{
        ///			entity.RowVersion = connection.ExecuteScalar&lt;byte[]&gt;($&quot;[dbo].[{ typeof(T).Name}_Update]&quot;,
        ///				ToAnonymous(entity, true),
        ///				commandType: CommandType.StoredProcedure);
        ///		}
        ///		catch(SqlException ex)
        ///		{
        ///			if (ex.Number == 50000 &amp;&amp; ex.Class == 16 &amp;&amp; ex.Message.Contains(&quot; is al gewijzigd door een andere gebruiker.&quot;))
        ///			{
        ///				throw new DBConcurrencyException($&quot;Dirty write detected while updatin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GenericRepositoryUpdate {
            get {
                return ResourceManager.GetString("GenericRepositoryUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %Namespaces%
        ///
        ///namespace %OwnNamespace%
        ///{
        ///	%Attributes%
        ///	public partial %Type% %InterfaceName%%Extension%
        ///	{
        ///		%Properties%
        ///			
        ///		%Methods%	
        ///	}
        ///}.
        /// </summary>
        internal static string InterfaceFile {
            get {
                return ResourceManager.GetString("InterfaceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to protected void NinjectBinder&lt;T, TY&gt;() where TY : T
        ///{
        ///    Bind&lt;T&gt;().To&lt;TY&gt;()%BindingScope%;
        ///}.
        /// </summary>
        internal static string NinjectBinder {
            get {
                return ResourceManager.GetString("NinjectBinder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private void Dispose(bool disposing)
        ///        {
        ///            if (!_disposed)
        ///            {
        ///                if (disposing)
        ///                {
        ///                    // ReSharper disable once UseNullPropagation
        ///                    if (_connection != null)
        ///                    {
        ///                        // ReSharper disable once InconsistentlySynchronizedField
        ///                        _connection.Dispose();
        ///                    }
        ///                }
        ///
        ///                _disposed = true;
        ///            }
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrivateDispose {
            get {
                return ResourceManager.GetString("PrivateDispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public List&lt;%PropertyValueType%&gt; %PropertyName% { get; } = new List&lt;%PropertyValueType%&gt;();.
        /// </summary>
        internal static string PropertyChildCollection {
            get {
                return ResourceManager.GetString("PropertyChildCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to private %PropertyValueType% _%PropertyParameterName%;
        ///%BusinessRules%
        ///public %PropertyValueType% %PropertyName%
        ///{
        ///	get { return _%PropertyParameterName%; }
        ///	set { SetField(ref _%PropertyParameterName%, value, nameof(%PropertyName%)); }
        ///}.
        /// </summary>
        internal static string PropertyDapperDefault {
            get {
                return ResourceManager.GetString("PropertyDapperDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %BusinessRules%
        ///public %PropertyValueType% %PropertyName% { get; set; }.
        /// </summary>
        internal static string PropertyDefault {
            get {
                return ResourceManager.GetString("PropertyDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public %PropertyValueType% %PropertyName% { get; private set; }.
        /// </summary>
        internal static string PropertyReadonlyGuid {
            get {
                return ResourceManager.GetString("PropertyReadonlyGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public void Dispose()
        ///        {
        ///            Dispose(true);
        ///            GC.SuppressFinalize(this);
        ///        }.
        /// </summary>
        internal static string PublicDispose {
            get {
                return ResourceManager.GetString("PublicDispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string RepositoryGetById {
            get {
                return ResourceManager.GetString("RepositoryGetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to internal static Dictionary&lt;long, %EntityName%&gt; Read(GridReader reader)
        ///{
        ///	%ChildReader%
        ///	
        ///	%ChildCollectionReader%
        ///
        ///    var items = reader.Read((%ReaderParameters%) =&gt;
        ///    {
        ///        %ChildReadDictionary%
        ///
        ///        %ChildCollectionReadDictionary%
        ///
        ///        return item;
        ///    }, splitOn: &quot;%SplitOn%&quot;);
        ///
        ///    return items.ToDictionary(x =&gt; x.Id);        
        ///}.
        /// </summary>
        internal static string RepositoryGetFullByIdReader {
            get {
                return ResourceManager.GetString("RepositoryGetFullByIdReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to internal static Dictionary&lt;long, %EntityName%&gt; Read(GridReader reader)
        ///{
        ///    return reader.Read&lt;%EntityName%&gt;().ToDictionary(x =&gt; x.Id);      
        ///}.
        /// </summary>
        internal static string RepositoryGetFullByIdReaderWithoutProp {
            get {
                return ResourceManager.GetString("RepositoryGetFullByIdReaderWithoutProp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public %EntityName% GetFullObjectById(long id)
        ///{
        ///    var parameters = new DynamicParameters();
        ///    parameters.Add(&quot;id&quot;, id);
        ///    return _genericRepository.QueryMultiple(&quot;%GetByIdStp%&quot;, parameters, x =&gt; Read(x).Values).SingleOrDefault();
        ///}.
        /// </summary>
        internal static string RepositoryGetFullObjectById {
            get {
                return ResourceManager.GetString("RepositoryGetFullObjectById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to internal static Dictionary&lt;long, %EntityName%&gt; Read(GridReader reader)
        ///{
        ///	%ChildReader%
        ///	
        ///	%ChildCollectionReader%
        ///
        ///    var items = reader.Read((%EntityName% item, %EntityName% returnItem) =&gt;
        ///    {
        ///        %ChildCollectionReadDictionary%
        ///
        ///        return returnItem;
        ///    });
        ///
        ///    return items.ToDictionary(x =&gt; x.Id);        
        ///}.
        /// </summary>
        internal static string RepositoryGetFullyByIdChildCollectionReader {
            get {
                return ResourceManager.GetString("RepositoryGetFullyByIdChildCollectionReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public %EntityName% Save(%EntityName%  %EntityNameLowerCase%)
        ///{
        ///	%SaveChild%	
        ///	%EntityNameLowerCase% = _genericRepository.Save(%EntityNameLowerCase%);	
        ///	%SaveChildCollections%	
        ///	return %EntityNameLowerCase%;
        ///}.
        /// </summary>
        internal static string RepositorySave {
            get {
                return ResourceManager.GetString("RepositorySave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public %EntityName% Save(%EntityName%  %EntityNameLowerCase%)
        ///{
        ///	using (var trans = new TransactionScope())
        ///	{
        ///		%SaveChild%		
        ///		%EntityNameLowerCase% = _genericRepository.Save(%EntityNameLowerCase%);		
        ///		%SaveChildCollections%				
        ///		trans.Complete();
        ///	}
        ///	return %EntityNameLowerCase%;
        ///}.
        /// </summary>
        internal static string RepositorySaveWithTransaction {
            get {
                return ResourceManager.GetString("RepositorySaveWithTransaction", resourceCulture);
            }
        }
    }
}
